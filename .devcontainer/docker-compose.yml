volumes:
  postgres-data:
  pgadmin-data:

services:
  app:
    container_name: javadev
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      # NOTE: POSTGRES_DB/USER/PASSWORD should match values in db container
        POSTGRES_PASSWORD: postgres
        POSTGRES_USER: postgres
        POSTGRES_DB: milhas
        POSTGRES_HOSTNAME: postgresdb

    volumes:
      - ../..:/workspaces:cached
      
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:db

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  db:
    container_name: postgresdb
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      # NOTE: POSTGRES_DB/USER/PASSWORD should match values in app container
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: milhas

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_CONFIG_SERVER_MODE: 'False'  # Modo servidor desativado, assim você terá login automático
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'  # Desativa o pedido de senha
      PGADMIN_CONFIG_USER_ID: '1'  # Configura o ID do usuário administrador automaticamente
      PGADMIN_DEFAULT_EMAIL: postgres@pgadmin.dev
      PGADMIN_DEFAULT_PASSWORD: postgres
    ports:
      - "5000:80"  # Mapeia a porta 80 para acessar o pgAdmin no navegador
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./pgadmin_config/servers.json:/pgadmin4/servers.json # configura o servidor
